# =====================================================================================
# SIGMA PLI - DEPENDÊNCIAS PYTHON COMPLETAS
# Sistema de Gestão e Análise de Atas PLI-SP
# =====================================================================================
# Versão: 1.0
# Data: 15 de julho de 2025
# Compatibilidade: Python 3.9+
# =====================================================================================

# === CORE NLP LIBRARIES ===
# Processamento de linguagem natural essencial
spacy>=3.6.1
spacy[lookups]>=3.6.1
# Modelo português para spaCy (instalar via comando separado)
# python -m spacy download pt_core_news_sm

# === ADVANCED NLP & AI ===
# Modelos transformer e NLP avançado
transformers>=4.33.0
torch>=2.0.1
sentence-transformers>=2.2.2
bertopic>=0.15.0
keybert>=0.8.0
bert-score>=0.3.13
datasets>=2.14.0

# === TRADITIONAL NLP ===
# Bibliotecas tradicionais de NLP
nltk>=3.8.1
textblob>=0.17.1
gensim>=4.3.2
scikit-learn>=1.3.0
polyglot>=16.7.4

# === TEXT PROCESSING ===
# Processamento e extração de texto
beautifulsoup4>=4.12.2
lxml>=4.9.3
html2text>=2020.1.16
markdown>=3.4.4
python-docx>=0.8.11
PyPDF2>=3.0.1
pdfplumber>=0.9.0
python-magic>=0.4.27
mammoth>=1.6.0
textract>=1.6.5

# === DATA ANALYSIS & VISUALIZATION ===
# Análise de dados e visualização
pandas>=2.0.3
numpy>=1.24.3
scipy>=1.11.1
matplotlib>=3.7.2
seaborn>=0.12.2
plotly>=5.15.0
wordcloud>=1.9.2

# === METRICS AND EVALUATION ===
# Métricas para avaliação de NLP
rouge-score>=0.1.2
sacrebleu>=2.3.1
py-rouge>=1.1
bleu>=0.2.0

# === WEB FRAMEWORKS & API ===
# Frameworks web para APIs
fastapi>=0.103.0
uvicorn[standard]>=0.23.2
starlette>=0.27.0
pydantic>=2.3.0
requests>=2.31.0
httpx>=0.24.1

# Flask como alternativa
flask>=2.3.3
flask-cors>=4.0.0
flask-sqlalchemy>=3.0.5

# === DATABASE DRIVERS ===
# Conectores de banco de dados
psycopg2-binary>=2.9.7
sqlalchemy>=2.0.20
alembic>=1.12.0
asyncpg>=0.28.0

# === UTILITIES ===
# Utilitários gerais
python-dotenv>=1.0.0
pydantic>=2.3.0
tqdm>=4.66.1
click>=8.1.7
colorama>=0.4.6
python-dateutil>=2.8.2
pytz>=2023.3
babel>=2.12.1

# === DEVELOPMENT & TESTING ===
# Ferramentas de desenvolvimento
pytest>=7.4.0
pytest-asyncio>=0.21.1
pytest-cov>=4.1.0
black>=23.7.0
flake8>=6.0.0
mypy>=1.5.1
isort>=5.12.0

# === JUPYTER & ANALYSIS ===
# Jupyter para análise interativa
jupyter>=1.0.0
ipython>=8.15.0
jupyterlab>=4.0.5
notebook>=7.0.2

# === CACHE & PERFORMANCE ===
# Cache e otimização de performance
redis>=4.6.0
memcached>=1.59
joblib>=1.3.2
numba>=0.57.1

# === LOGGING & MONITORING ===
# Logs e monitoramento
loguru>=0.7.0
structlog>=23.1.0
prometheus-client>=0.17.1

# === IMAGE PROCESSING ===
# Processamento de imagens (para OCR futuro)
pillow>=10.0.0
opencv-python>=4.8.0.76
pytesseract>=0.3.10

# === AUDIO PROCESSING ===
# Processamento de áudio (para transcrição futura)
speechrecognition>=3.10.0
pydub>=0.25.1
librosa>=0.10.1

# === GEOCODING & LOCATION ===
# Geocodificação e localização
geopy>=2.3.0
folium>=0.14.0
geopandas>=0.13.2

# === SECURITY ===
# Segurança e criptografia
cryptography>=41.0.3
passlib[bcrypt]>=1.7.4
python-jose[cryptography]>=3.3.0

# === FILE FORMATS ===
# Suporte a formatos diversos
openpyxl>=3.1.2
xlsxwriter>=3.1.2
python-pptx>=0.6.21
reportlab>=4.0.4

# === ASYNC & CONCURRENCY ===
# Programação assíncrona
asyncio>=3.4.3
aiofiles>=23.2.1
aiomultiprocess>=0.9.0

# === CONFIGURATION ===
# Gerenciamento de configuração
pyyaml>=6.0.1
toml>=0.10.2
configparser>=6.0.0

# === TIME SERIES ===
# Análise de séries temporais
arrow>=1.2.3
pendulum>=2.1.2

# === MACHINE LEARNING EXTRAS ===
# ML adicional para análises futuras
xgboost>=1.7.6
lightgbm>=4.0.0
catboost>=1.2.2

# === NETWORKING ===
# Funcionalidades de rede
aiohttp>=3.8.5
websockets>=11.0.3

# === COMPATIBILITY ===
# Compatibilidade e utilitários
six>=1.16.0
packaging>=23.1
setuptools>=68.1.0
wheel>=0.41.2

# =====================================================================================
# COMANDOS PÓS-INSTALAÇÃO NECESSÁRIOS:
# =====================================================================================
# 
# 1. Baixar modelo spaCy português:
#    python -m spacy download pt_core_news_sm
#    python -m spacy download pt_core_news_lg  # versão maior (opcional)
#
# 2. Baixar dados NLTK:
#    python -c "import nltk; nltk.download('punkt')"
#    python -c "import nltk; nltk.download('stopwords')"
#    python -c "import nltk; nltk.download('wordnet')"
#    python -c "import nltk; nltk.download('vader_lexicon')"
#    python -c "import nltk; nltk.download('averaged_perceptron_tagger')"
#
# 3. Verificar instalação:
#    python -c "import spacy; nlp = spacy.load('pt_core_news_sm'); print('spaCy OK')"
#    python -c "import transformers; print('Transformers OK')"
#    python -c "import torch; print('PyTorch OK')"
#
# =====================================================================================
# INSTALAÇÃO RECOMENDADA:
# =====================================================================================
#
# 1. Criar ambiente virtual:
#    python3 -m venv venv_sigma_pli
#    source venv_sigma_pli/bin/activate  # Linux/Mac
#    venv_sigma_pli\Scripts\activate     # Windows
#
# 2. Atualizar pip:
#    pip install --upgrade pip setuptools wheel
#
# 3. Instalar dependências:
#    pip install -r requirements.txt
#
# 4. Executar comandos pós-instalação acima
#
# =====================================================================================
